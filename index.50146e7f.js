let e;var t;(t=e||(e={})).Passed="pass",t.Failed="fail",t.Running="running";class s{constructor(e){this.id=e.id,this.name=e.name,this.result=e.result,this.details=e.details,this.desc=e.desc,this.test=e.test}}const a=(e,t,s)=>{const a=document.createElement(e);return s&&Object.keys(s).forEach((e=>{var t;return a.setAttribute(e,null===(t=s[e])||void 0===t?void 0:t.toString())})),t&&(a.innerText=t),a},i=t=>{switch(t){case e.Passed:return"✔";case e.Failed:return"❌";case e.Running:return"🔥"}},n=(e,t,s)=>{const n=document.querySelector(e);if(!n)return void console.error(`No element found for ${e}`);const o=a("article"),l=a("h3",t),d=a("table"),r=a("tr");r.appendChild(a("th","Test")),r.appendChild(a("th","Result")),r.appendChild(a("th","Details")),d.appendChild(r),s&&(s.forEach((e=>{const t=a("tr",void 0,{id:e.id});t.appendChild(a("td",e.name)),t.appendChild(a("td",i(e.result),{class:e.result}));const[s,...n]=e.details,o=a("td",void 0,{"data-length":e.details.length});o.appendChild(a("span",s)),o.appendChild(a("br")),o.appendChild(a("small",n.join("<br/>"))),t.appendChild(o);const l=a("tr",void 0,{class:"desc"});l.appendChild(a("td",e.desc,{colspan:3})),d.appendChild(t),d.appendChild(l);const r=a("tr",void 0,{class:"spacer"});r.appendChild(a("td",void 0,{colspan:3})),d.appendChild(r)})),d.removeChild(d.lastChild)),o.appendChild(l),o.appendChild(d),n.appendChild(o)},o=(e,t)=>{var s;const a=`${e} tr#${t.id}`,n=document.querySelector(a);if(!n)return void console.error(`No element found for ${a}`);const o=n.children[0],l=n.children[1],d=n.children[2],r=null===(s=n.nextSibling)||void 0===s?void 0:s.childNodes[0];let c=!1;if(o&&o.innerText!==t.name&&(o.innerText=t.name,c=!0),l&&l.className!==t.result&&(l.innerText=i(t.result),l.className=t.result,c=!0),d&&d.getAttribute("data-length")!==t.details.length.toString()){d.setAttribute("data-length",t.details.length.toString());const[e,...s]=t.details;d.children[0].innerHTML=e,d.children[2].innerHTML=s.join("<br/>"),c=!0}r&&r.innerText!==t.desc&&(r.innerText=t.desc,c=!0),c&&(n.classList.toggle("changed"),setTimeout((()=>{n.classList.toggle("changed")}),1e3))},l={light:{id:"light",name:"Light",icon:"🌞"},dark:{id:"dark",name:"Dark",icon:"🌛"}},d=(e,t,s)=>{if(!e)return;const a=document.getElementById(e);a&&(a.innerText=t.icon,a.setAttribute("title",`Switch to ${s.name} theme`))},r=window.localStorage,c=[new s({id:"ls-availability",name:"Available",result:e.Running,details:["Checking availability..."],desc:"Checks if local storage is available to be used.",test:e=>new Promise(((t,s)=>{r&&"function"==typeof r.getItem&&"function"==typeof r.setItem?(e.details.unshift("Available"),t()):(e.details.unshift("Not available"),s())}))}),new s({id:"ls-set",name:"Set value",result:e.Running,details:["Setting value..."],desc:"Tries to set a value into local storage.",test:e=>new Promise(((t,s)=>{if(r&&"function"==typeof r.setItem&&"function"==typeof r.removeItem)try{r.setItem("test.ls-set","test"),e.details.unshift("Successfully set value"),r.removeItem("test.ls-set"),t()}catch(t){e.details.unshift(`Failed to set value<br/>${null==t?void 0:t.message}`),s()}else e.details.unshift("LocalStorage is not available"),s()}))}),new s({id:"ls-get",name:"Get value",result:e.Running,details:["Getting value..."],desc:"Tries to get a value from local storage.",test:e=>new Promise(((t,s)=>{if(r&&"function"==typeof r.setItem&&"function"==typeof r.getItem&&"function"==typeof r.removeItem){const a="test.ls-get",i="test";try{r.setItem(a,i),e.details.unshift("Successfully set value")}catch(t){return e.details.unshift(`Failed to set value<br/>${null==t?void 0:t.message}`),void s()}try{const n=r.getItem(a);return r.removeItem(a),n?n===i?(e.details.unshift("Successfully got value"),t()):e.details.unshift("Value has changed"):e.details.unshift("Failed to get value"),void s()}catch(t){return e.details.unshift(`Failed to get value<br/>${null==t?void 0:t.message}`),void s()}}e.details.unshift("Local Storage is not available"),s()}))})],u=window.sessionStorage,f=[new s({id:"ss-availability",name:"Available",result:e.Running,details:["Checking availability..."],desc:"Checks if session storage is available to be used.",test:e=>new Promise(((t,s)=>{u&&"function"==typeof u.getItem&&"function"==typeof u.setItem?(e.details.unshift("Available"),t()):(e.details.unshift("Not available"),s())}))}),new s({id:"ss-set",name:"Set value",result:e.Running,details:["Setting value..."],desc:"Tries to set a value into session storage.",test:e=>new Promise(((t,s)=>{if(u&&"function"==typeof u.setItem&&"function"==typeof u.removeItem)try{u.setItem("test.ss-set","test"),e.details.unshift("Successfully set value"),u.removeItem("test.ss-set"),t()}catch(t){e.details.unshift(`Failed to set value<br/>${null==t?void 0:t.message}`),s()}else e.details.unshift("Session Storage is not available"),s()}))}),new s({id:"ss-get",name:"Get value",result:e.Running,details:["Getting value..."],desc:"Tries to get a value from session storage.",test:e=>new Promise(((t,s)=>{if(u&&"function"==typeof u.setItem&&"function"==typeof u.getItem&&"function"==typeof u.removeItem){const a="test.ss-get",i="test";try{u.setItem(a,i),e.details.unshift("Successfully set value")}catch(t){return e.details.unshift(`Failed to set value<br/>${null==t?void 0:t.message}`),void s()}try{const n=u.getItem(a);return u.removeItem(a),n?n===i?(e.details.unshift("Successfully got value"),t()):e.details.unshift("Value has changed"):e.details.unshift("Failed to get value"),void s()}catch(t){return e.details.unshift(`Failed to get value<br/>${null==t?void 0:t.message}`),void s()}}e.details.unshift("Session Storage is not available"),s()}))})],h=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,m=async(e,t,s)=>new Promise(((a,i)=>{if(h&&"function"==typeof h.open&&"function"==typeof h.deleteDatabase)try{const n=h.open(t);n.onupgradeneeded=async()=>{if(!n.result)return e.details.unshift(`Database ${t} opened without IDBDatabase object`),void i();e.details.unshift(`Creating database ${t} schema...`),await s(n.result)},n.onerror=()=>{var s;e.details.unshift(`Failed to open database ${t}<br/>${null===(s=n.error)||void 0===s?void 0:s.message}`),i()},n.onsuccess=()=>{if(!n.result)return e.details.unshift(`Database ${t} opened without IDBDatabase object`),void i();a(n.result)}}catch(s){e.details.unshift(`Failed to open database ${t}<br/>${null==s?void 0:s.message}`),i()}else e.details.unshift("IndexedDB is not available"),i()})).catch((()=>{})),b=async(e,t,s)=>new Promise(((a,i)=>{if(s)try{s.close(),e.details.unshift(`Closed database ${t}`)}catch(s){e.details.unshift(`Failed to close database ${t}<br/>${null==s?void 0:s.message}`),i()}if(h&&"function"==typeof h.deleteDatabase)try{const s=h.deleteDatabase(t);s.onerror=()=>{var a;e.details.unshift(`Failed to delete database ${t}<br/>${null===(a=s.error)||void 0===a?void 0:a.message}`),i()},s.onsuccess=s=>{if(s.result)return e.details.unshift(`Database ${t} was deleted, but result has value: ${s.result}`),void i();e.details.unshift(`Database ${t} deleted`),a()}}catch(s){e.details.unshift(`Failed to delete database ${t}<br/>${null==s?void 0:s.message}`),i()}else e.details.unshift("IndexedDB deleteDatabase is not available"),i()})).then((()=>!0)).catch((()=>!1)),v=async(e,t,s)=>new Promise(((a,i)=>{if(t&&"function"==typeof t.transaction)try{const i=t.transaction(s,"readwrite");e.details.unshift(`Transaction for store ${s} created`),a(i)}catch(t){e.details.unshift(`Failed to create transaction for store ${s}<br/>${null==t?void 0:t.message}`),i()}else e.details.unshift("IndexedDB transaction is not available"),i()})).catch((()=>{})),g=async(e,t)=>new Promise(((s,a)=>{t.oncomplete=()=>{e.details.unshift("Transaction comitted"),s()},t.onabort=()=>{e.details.unshift("Transaction aborted"),a()},t.onerror=()=>{var s;e.details.unshift(`Transaction error: ${null===(s=t.error)||void 0===s?void 0:s.message}`),a()}})).then((()=>!0)).catch((()=>!1)),p=async(e,t,s)=>new Promise(((a,i)=>{if(t&&"function"==typeof t.createObjectStore)try{const i=t.createObjectStore(s);e.details.unshift(`Store ${s} created`),a(i)}catch(t){e.details.unshift(`Failed to create store ${s}<br/>${null==t?void 0:t.message}`),i()}else e.details.unshift("IndexedDB createObjectStore is not available"),i()})).catch((()=>{})),w=async(e,t,s)=>new Promise(((a,i)=>{if(t&&"function"==typeof t.objectStore)try{const i=t.objectStore(s);e.details.unshift(`Store ${s} opened`),a(i)}catch(t){e.details.unshift(`Failed to open store ${s}<br/>${null==t?void 0:t.message}`),i()}else e.details.unshift("IndexedDB objectStore is not available"),i()})).catch((()=>{})),y=async(e,t,s,a)=>new Promise(((i,n)=>{if(t&&"function"==typeof t.put)try{t.put(a,s),e.details.unshift(`Pair ${s}: ${a} written to store ${t.name}`),i()}catch(i){e.details.unshift(`Failed to write pair ${s}: ${a} to store ${t.name}<br/>${null==i?void 0:i.message}`),n()}else e.details.unshift("IndexedDB put is not available"),n()})).then((()=>!0)).catch((()=>!1)),$=async(e,t,s)=>new Promise(((a,i)=>{if(t&&"function"==typeof t.get)try{const n=t.get(s);n.onsuccess=()=>{n.result?(e.details.unshift(`Pair ${s}: ${n.result} read from store ${t.name}`),a(n.result)):(e.details.unshift(`Failed to read ${s} from store ${t.name}, result is falsy`),i())},n.onerror=()=>{var a;e.details.unshift(`Failed to read ${s} from store ${t.name}<br/>${null===(a=n.error)||void 0===a?void 0:a.message}`),i()}}catch(a){e.details.unshift(`Failed to read ${s} from store ${t.name}<br/>${null==a?void 0:a.message}`),i()}else e.details.unshift("IndexedDB put is not available"),i()})).catch((()=>!1)),I={"Local Storage":c,"Session Storage":f,"Indexed DB":[new s({id:"idb-availability",name:"Available",result:e.Running,details:["Checking availability..."],desc:"Checks if IndexedDB is available to be used.",test:e=>new Promise(((t,s)=>{indexedDB&&"function"==typeof indexedDB.open&&"function"==typeof indexedDB.deleteDatabase?(e.details.unshift("Available"),t()):(e.details.unshift("Not available"),s())}))}),new s({id:"idb-open",name:"Open database",result:e.Running,details:["Opening database..."],desc:"Tries to open a new database.",test:e=>new Promise((async(t,s)=>{const a="test-idb-open",i=await m(e,a,(e=>e));if(i&&(e.details.unshift("Opened database"),await b(e,a,i)))return e.details.unshift("Successfully opened database"),void t();e.details.unshift("Failed to open database"),s()}))}),new s({id:"idb-write",name:"Write to object store",result:e.Running,details:["Writing to object store..."],desc:"Tries to write to an object store.",test:e=>new Promise((async(t,s)=>{const a="test.idb-write",i="test.idb-write.store",n=await m(e,a,(t=>{p(e,t,i);e.details.unshift("Created database schema")}));if(n){e.details.unshift(`Opened database ${a}`);let s=!1;const o=await v(e,n,i);if(o){const t=g(e,o);e.details.unshift("Created write transaction");const a=await w(e,o,i);a&&await y(e,a,"key","value")?o.commit():o.abort(),s=!!await t}if(await b(e,a,n)&&s)return e.details.unshift("Successfully written to object store"),void t()}e.details.unshift("Failed to write into object store"),s()}))}),new s({id:"idb-read",name:"Read from object store",result:e.Running,details:["Reading from object store..."],desc:"Tries to read from object store.",test:e=>new Promise((async(t,s)=>{const a="test.idb-read",i="test.idb-read.store",n="key",o="value",l=await m(e,a,(t=>{p(e,t,i);e.details.unshift("Created database schema")}));if(l){e.details.unshift(`Opened database ${a}`);let s=!1,d=await v(e,l,i);if(d){const t=g(e,d);e.details.unshift("Created write transaction");const a=await w(e,d,i);a&&await y(e,a,n,o)?d.commit():d.abort(),s=!!await t}if(s){let t=await v(e,l,i);if(t){const a=g(e,t);e.details.unshift("Created read transaction");const l=await w(e,t,i);if(l){const s=await $(e,l,n);s?s===o?t.commit():(e.details.unshift("Read value is different"),t.abort()):(e.details.unshift("Read value is null"),t.abort())}else t.abort();s=!!await a}}if(await b(e,a,l)&&s)return e.details.unshift("Successfully read from object store"),void t()}e.details.unshift("Failed to write into object store"),s()}))})]};var S;null===(S=document.getElementById("themeBtn"))||void 0===S||S.addEventListener("click",(()=>{var e;e="themeBtn",document.body.classList.contains(l.dark.id)?(document.body.classList.remove(l.dark.id),document.body.classList.add(l.light.id),d(e,l.light,l.dark),window.localStorage.setItem("theme",l.light.id)):(document.body.classList.remove(l.light.id),document.body.classList.add(l.dark.id),d(e,l.dark,l.light),window.localStorage.setItem("theme",l.dark.id))})),window.onload=()=>{document.body.classList.add("loaded");for(const t in I)if(Object.prototype.hasOwnProperty.call(I,t)){const s=I[t];n("#apis",t,s),s.forEach((t=>{t.test(t).then((()=>{t.result=e.Passed,o("#apis",t)})).catch((()=>{t.result=e.Failed,o("#apis",t)}));const s=setInterval((()=>{t.result===e.Running?o("#apis",t):clearInterval(s)}),1e3)}))}};const C=(()=>{const e=window.localStorage.getItem("theme");return e&&(null==l?void 0:l[e])||l.dark})();document.body.classList.add(C.id),C!==l.dark?(document.body.classList.remove(l.dark.id),d("themeBtn",C,l.light)):d("themeBtn",C,l.dark);