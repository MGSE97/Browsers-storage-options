!function(){let e;var t;(t=e||(e={})).Passed="pass",t.Failed="fail",t.Running="running";class s{constructor(e){this.id=e.id,this.name=e.name,this.result=e.result,this.details=e.details,this.desc=e.desc,this.test=e.test}}const l=(e,t,s)=>{const l=document.createElement(e);return s&&Object.keys(s).forEach((e=>{var t;return l.setAttribute(e,null===(t=s[e])||void 0===t?void 0:t.toString())})),t&&(l.innerText=t),l},a=t=>{switch(t){case e.Passed:return"✔";case e.Failed:return"❌";case e.Running:return"🔥"}},i=(e,t,s)=>{const i=document.querySelector(e);if(!i)return void console.error(`No element found for ${e}`);const n=l("article"),o=l("h3",t),d=l("table"),r=l("tr");r.appendChild(l("th","Test")),r.appendChild(l("th","Result")),r.appendChild(l("th","Details")),d.appendChild(r),s&&(s.forEach((e=>{const t=l("tr",void 0,{id:e.id});t.appendChild(l("td",e.name)),t.appendChild(l("td",a(e.result),{class:e.result})),t.appendChild(l("td",e.details));const s=l("tr",void 0,{class:"desc"});s.appendChild(l("td",e.desc,{colspan:3})),d.appendChild(t),d.appendChild(s);const i=l("tr",void 0,{class:"spacer"});i.appendChild(l("td",void 0,{colspan:3})),d.appendChild(i)})),d.removeChild(d.lastChild)),n.appendChild(o),n.appendChild(d),i.appendChild(n)},n=(e,t)=>{var s;const l=`${e} tr#${t.id}`,i=document.querySelector(l);if(!i)return void console.error(`No element found for ${l}`);const n=i.children[0],o=i.children[1],d=i.children[2],r=null===(s=i.nextSibling)||void 0===s?void 0:s.childNodes[0];n&&(n.innerText=t.name),o&&(o.innerText=a(t.result),o.className=t.result),d&&(d.innerText=t.details),r&&(r.innerText=t.desc),i.classList.toggle("changed"),setTimeout((()=>{i.classList.toggle("changed")}),1e3)},o=window.localStorage,d=[new s({id:"ls-availability",name:"Available",result:e.Running,details:"Checking availability...",desc:"Checks if local storage (window.localStorage) is available to be used.",test:t=>new Promise(((s,l)=>{o&&"function"==typeof o.getItem&&"function"==typeof o.setItem?(t.details="Available",t.result=e.Passed,s()):(t.details="Not available",t.result=e.Failed,s())}))}),new s({id:"ls-set",name:"Set value",result:e.Running,details:"Setting value...",desc:"Tries to set a value into local storage.",test:t=>new Promise(((s,l)=>{if(o&&"function"==typeof o.setItem&&"function"==typeof o.removeItem){try{o.setItem("test.ls-set","test"),t.details="Successfully set value",t.result=e.Passed,o.removeItem("test.ls-set")}catch(s){t.details=`Failed to set value<br/>${null==s?void 0:s.message}`,t.result=e.Failed}s()}else t.details="LocalStorage is not available",t.result=e.Failed,s()}))}),new s({id:"ls-get",name:"Get value",result:e.Running,details:"Getting value...",desc:"Tries to get a value from local storage.",test:t=>new Promise(((s,l)=>{if(o&&"function"==typeof o.setItem&&"function"==typeof o.getItem&&"function"==typeof o.removeItem){const l="test.ls-get",a="test";try{o.setItem(l,a),t.details="Successfully set value"}catch(l){return t.details=`Failed to set value<br/>${null==l?void 0:l.message}`,t.result=e.Failed,void s()}try{const i=o.getItem(l);return i?i===a?(t.details="Successfully got value",t.result=e.Passed):(t.details="Value has changed",t.result=e.Failed):(t.details="Failed to get value",t.result=e.Failed),o.removeItem(l),void s()}catch(l){return t.details=`Failed to get value<br/>${null==l?void 0:l.message}`,t.result=e.Failed,void s()}}t.details="Local Storage is not available",t.result=e.Failed,s()}))})],r=window.sessionStorage,u={"Local Storage":d,"Session Storage":[new s({id:"ss-availability",name:"Available",result:e.Running,details:"Checking availability...",desc:"Checks if session storage (window.sessionStorage) is available to be used.",test:t=>new Promise(((s,l)=>{r&&"function"==typeof r.getItem&&"function"==typeof r.setItem?(t.details="Available",t.result=e.Passed,s()):(t.details="Not available",t.result=e.Failed,s())}))}),new s({id:"ss-set",name:"Set value",result:e.Running,details:"Setting value...",desc:"Tries to set a value into session storage.",test:t=>new Promise(((s,l)=>{if(r&&"function"==typeof r.setItem&&"function"==typeof r.removeItem){try{r.setItem("test.ss-set","test"),t.details="Successfully set value",t.result=e.Passed,r.removeItem("test.ss-set")}catch(s){t.details=`Failed to set value<br/>${null==s?void 0:s.message}`,t.result=e.Failed}s()}else t.details="Session Storage is not available",t.result=e.Failed,s()}))}),new s({id:"ss-get",name:"Get value",result:e.Running,details:"Getting value...",desc:"Tries to get a value from session storage.",test:t=>new Promise(((s,l)=>{if(r&&"function"==typeof r.setItem&&"function"==typeof r.getItem&&"function"==typeof r.removeItem){const l="test.ss-get",a="test";try{r.setItem(l,a),t.details="Successfully set value"}catch(l){return t.details=`Failed to set value<br/>${null==l?void 0:l.message}`,t.result=e.Failed,void s()}try{const i=r.getItem(l);return i?i===a?(t.details="Successfully got value",t.result=e.Passed):(t.details="Value has changed",t.result=e.Failed):(t.details="Failed to get value",t.result=e.Failed),r.removeItem(l),void s()}catch(l){return t.details=`Failed to get value<br/>${null==l?void 0:l.message}`,t.result=e.Failed,void s()}}t.details="Session Storage is not available",t.result=e.Failed,s()}))})]};window.onload=()=>{for(const e in u)if(Object.prototype.hasOwnProperty.call(u,e)){const t=u[e];i("#apis",e,t),t.forEach((e=>{e.test(e).then((()=>{n("#apis",e)}))}))}}}();